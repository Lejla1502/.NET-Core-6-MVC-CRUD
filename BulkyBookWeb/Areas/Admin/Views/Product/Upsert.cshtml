@model BulkyBook.Models.ViewModels.ProductVM
@using BulkyBook.Models
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery 
@{

    ViewData["Title"] = "Create";
    
   Author author = new Author();

    var tokenSet = antiforgery.GetAndStoreTokens(Context);
}

<style>


        #wrapper{
            position: absolute;
            left: 0;
            top: 0;
            width: 110vw;
            height: 100vh;
            background-color:rgba(100, 100, 100, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            visibility: hidden;
             z-index: 100;
       
        }
  
        #popup{
            width: 60%;
            height: auto;
            background-color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 10px;
                 z-index=100;
        }
      
       
</style>

<div class="container">
    <div id="wrapper">
        <div id="popup">
            <div>
            <h2>Add author</h2>
                <form ajax-poziv='da' ajax-url="/Admin/Author/Upsert"  data-ajax="true"  id="addNewAuthor" method="post" enctype="multipart/form-data">
                    <input asp-for="@author.Id" type="hidden" />
        

                    <div class="row">
                        <div class="col-10">
			                <div class=" p-3 mt-1 row">
		          
    
                        @*<div asp-validation-summary="All"></div>*@
                        <div class="mb-2">
                          <label asp-for="@author.FirstName" class="form-label mt-4">Authors First Name</label>
                          <input asp-for="@author.FirstName" type="text" class="form-control" placeholder="Enter First Name">
                          <span asp-validation-for="@author.FirstName" class="text-danger"></span>
                        </div>
                         <div class="mb-2">
                          <label asp-for="@author.LastName" class="form-label mt-4">Authors Last Name</label>
                          <input asp-for="@author.LastName" type="text" class="form-control" placeholder="Enter Last Name">
                          <span asp-validation-for="@author.LastName" class="text-danger"></span>
                        </div>
                         <div class="mb-2">
                          <label asp-for="@author.Bio" class="form-label mt-4">Short Bio</label>
                          <textarea asp-for="@author.Bio" type="text" rows="2" class="form-control" placeholder="Enter Bio"></textarea>
                          <span asp-validation-for="@author.Bio" class="text-danger"></span>
                        </div>
                           <br />
                        <div class="col-12">
                            @*@if(author.Id!=0)
                            {
                                 <button type="submit" class="btn btn-primary" style="width:150px">Update</button>
                            }
                            else
                            {
                                 <button type="submit"  class="btn btn-primary" style="width:150px">Create</button>
                            }*@

                        </div>
                        </div>
		                </div>
		
	                </div>
                    <button type="button"  class="btn btn-primary" id = "close-btn" data-save="modal">
                        Close
                    </button>
                    <button onclick="closePopup()" id="discard-author" type="button" style="float-right" class="btn btn-secondary">
                        Discard
                    </button>
                </form>
            </div>
        </div>
    </div>
<form ajax-poziv="ne" id="addNewProduct" method="post" asp-controller="Product" asp-action="Upsert" enctype="multipart/form-data">
    <input asp-for="Product.Id" type="hidden" />
        <input asp-for="Product.ImageUrl" type="hidden" />

    <div class="row" >
        <div class="col-10">
			<div class="border p-3 mt-4 row">
		<div class="col-12 pb-2">
			<h2 class="text-primary">@(Model.Product.Id!=0?"Update": "Create")  Product</h2>
			<hr />
		</div>
    
        @*<div asp-validation-summary="All"></div>*@
        <div class="mb-3 col-6">
          <label asp-for="Product.Title" class="form-label mt-4">Product Title</label>
          <input asp-for="Product.Title" type="text" class="form-control" placeholder="Enter Title">
          <span asp-validation-for="Product.Title" class="text-danger"></span>
        </div>
        <div class="mb-3 col-6"> 
          <label asp-for="Product.ISBN" class="form-label mt-4">Product ISBN</label>
          <input asp-for="Product.ISBN" type="text" class="form-control" placeholder="Enter ISBN">
          <span asp-validation-for="Product.ISBN" class="text-danger"></span>
        </div>
        <div class="mb-3 prod-descr">
          <label asp-for="Product.Description" class="form-label mt-4">Product Description</label>
          <textarea asp-for="Product.Description" type="text" rows="3" class="form-control" placeholder="Enter Description"></textarea>
          <span asp-validation-for="Product.Description" class="text-danger"></span>
        </div>
         <div class="mb-3 col-6">
          @* <label asp-for="@Model.AuthorId" class="form-label mt-4">Author</label>
            <select  class="form-control border" asp-for="@Model.AuthorId" asp-items="@Model.AuthorList">
                <option >--Select Author--</option>
            </select>
          <span asp-validation-for="@Model.AuthorId" class="text-danger"></span>*@

          <label asp-for="@Model.AuthorId" class="form-label mt-4">Author 1 (required)</label>
       @Html.DropDownListFor(x => x.AuthorId, Model.AuthorList, "--Select Author--", new { @class = "form-control" })
                <span class="text-danger">@Html.ValidationMessageFor(m => m.AuthorId)</span>
        </div>
        <div class="mb-3 col-6">
           <label asp-for="@Model.Author2Id" class="form-label mt-4">Author 2 (optional)</label>
            <select   class="form-control border" asp-for="@Model.Author2Id" asp-items="@Model.Author2List">
                <option >--Select Author--</option>
            </select>
          <span asp-validation-for="@Model.Author2Id" class="text-danger"></span>
        </div>
        <div>
            <button type="button" id="addAuthorBtn" ajax-rezultat="addAuthorDiv" ajax-url="/Admin/Author/Upsert" class="btn btn-primary">Add author</button>
        </div>
        
   @* <button type="button" class="btn btn-primary" data-toggle="ajax-modal" data-target="#addAuthor" 
    data-url="/Admin/Author/Upsert">Create</button>*@
        @*<div class="mb-3 col-6">
          <label asp-for="Product.CoverTypeId" class="form-label mt-4">Author</label>
          <select asp-for="Product.CoverTypeId" asp-items="@Model.CoverTypeList"
          class="form-select">
              <option disabled selected>--Select Cover Type--</option>
          </select>
          <span asp-validation-for="Product.CoverTypeId" class="text-danger"></span>
        </div>*@
        <div class="mb-3 col-6">
          <label asp-for="Product.ListPrice" class="form-label mt-4">ListPrice</label>
          <input asp-for="Product.ListPrice" type="text" class="form-control" placeholder="Enter ListPrice">
          <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
        </div>
        <div class="mb-3 col-6">
          <label asp-for="Product.Price" class="form-label mt-4">Price</label>
          <input asp-for="Product.Price" type="text" class="form-control" placeholder="Enter Price">
          <span asp-validation-for="Product.Price" class="text-danger"></span>
        </div>
        <div class="mb-3 col-6">
          <label asp-for="Product.Price50" class="form-label mt-4">Price50</label>
          <input asp-for="Product.Price50" type="text" class="form-control" placeholder="Enter Price50">
          <span asp-validation-for="Product.Price50" class="text-danger"></span>
        </div>
        <div class="mb-3 col-6">
          <label asp-for="Product.Price100" class="form-label mt-4">Price100</label>
          <input asp-for="Product.Price100" type="text" class="form-control" placeholder="Enter Price100">
          <span asp-validation-for="Product.Price100" class="text-danger"></span>
        </div>
         <div class="mb-3">
          <label asp-for="Product.ImageUrl" class="form-label mt-4">ImageUrl</label>
          <input asp-for="Product.ImageUrl" id="uploadBox" name="file" type="file"  onchange="showFile(this)" class="form-control" />
        </div>
         <div class="col-md-4 offset-4 text-center">
            <img width="100%" id="ImageUrlPreview" />
        </div>
        <div class="mb-3 col-6">
          <label asp-for="Product.CategoryId" class="form-label mt-4">Category</label>
          <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select">
              <option disabled selected>--Select Category--</option>
          </select>
          <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
        </div>
        <div class="mb-3 col-6">
          <label asp-for="Product.CoverTypeId" class="form-label mt-4">Category</label>
          <select asp-for="Product.CoverTypeId" asp-items="@Model.CoverTypeList"
          class="form-select">
              <option disabled selected>--Select Cover Type--</option>
          </select>
          <span asp-validation-for="Product.CoverTypeId" class="text-danger"></span>
        </div>
           <br />
        <div class="col-12">
            @if(Model.Product.Id!=0)
            {
                 <button id="btnUpdate" btn-type="update" type="submit" class="btn btn-primary" style="width:150px">Update</button>
            }
            else
            {
                 <button id="btnCreate" btn-type="create" type="submit" onclick="return ValidateInput()" class="btn btn-primary" style="width:150px">Create</button>
            }

            <a asp-controller="Product" asp-action="Index" class="btn btn-secondary" style="width:150px">Back to List</a>
        </div>
        </div>
		</div>
		<div class="col-2 pt-4 border">
			<img src="@Model.Product.ImageUrl" width="180"
			 style="border-radius:5px; border:1px solid #bbb9b9" />
		</div>
	</div>
</form>
</div>


<div id="addAuthorDiv"></div>



@section Scripts
{
    @{
                                                                                                                                                                                                                            <partial name="_ValidationScriptsPartial"></partial>
     }
     <script>
        
          window.onload = function() {

        // If sessionStorage is storing default values (ex. name), exit the function and do not restore data
        //if (sessionStorage.getItem('name') == "name") {
        //    return;
        //}

              var submitted = localStorage.getItem("submitted");
              //alert(title);

              if (submitted ==="yes")
                  return;

        // If values are not blank, restore them to the fields
        var title = localStorage.getItem('title');
              if (title !== null) $('#Product_Title').val(title); //$('#Product_Title').val(title);

        var ISBN = localStorage.getItem('ISBN');
        if (ISBN !== null) $('#Product_ISBN').val(ISBN);

        var description= localStorage.getItem('description');
        if (description!== null)  tinyMCE.get('Product_Description').setContent(description);

        //var message= sessionStorage.getItem('message');
        //if (message!== null) $('#inputMessage').val(message);
    }

    // Before refreshing the page, save the form data to sessionStorage
    window.onbeforeunload = function() {
        localStorage.setItem("title", $('#Product_Title').val());
        localStorage.setItem("ISBN", $('#Product_ISBN').val());
        localStorage.setItem("description", tinyMCE.get('Product_Description').getContent());
        //sessionStorage.setItem("message", $('#inputMessage').val());

        //alert(localStorage.getItem("title"));
    }

       //$('#btnCreate').click(function(event) {
       //   localStorage.setItem("title", "");
       // localStorage.setItem("ISBN", "");
       // localStorage.setItem("description","");
       //})

//$("#addNewProduct").submit(function() { 
//    $('#Product_Title').val("");
//    $('#Product_ISBN').val("");
//    tinyMCE.get('Product_Description').setContent("");
//})


         function showFile(input) {
          let file = input.files[0];
          let reader = new FileReader();

  

          reader.onload = function() {
              var output = document.getElementById("ImageUrlPreview");
          output.src = reader.result;
          
          };

          reader.onerror = function() {
            console.log(reader.error);
          };


          reader.readAsDataURL(file);
  

          }
      

          tinymce.init({
          selector: 'textarea',
          toolbar: 'a11ycheck addcomment showcomments casechange checklist code export formatpainter image editimage pageembed permanentpen table tableofcontents',
          toolbar_mode: 'floating',
          tinycomments_mode: 'embedded',
          tinycomments_author: 'Author name',
    });

        function ValidateInput(){
            if(document.getElementById("uploadBox").value==""){
                Swal.fire({
                  icon: 'error',
                  title: 'Oops...',
                  text: 'Please upload an Image!'
                });

                return false;
            }
          
                $('#addNewProduct').validate();
                //event.preventDefault();
                if (!$("#addNewProduct").valid()) {
                   // alert("not valid");
                    return false;
                }
                else {
                   // alert("valid");
                   // $('#Product_Title').val("");
                    localStorage.setItem("submitted", "yes");
                    return true;
                }
            
           
        }
            $(function () {
        
            jQuery.validator.unobtrusive.parse();
            jQuery.validator.unobtrusive.parse("#addNewAuthor");
        });

$(function() {
   

    var popup = $('#popup');

    popup.on('click', '[data-save="modal"]', function(event){
        var form = $('#addNewAuthor');
        var url="/Admin/Author/Upsert";
        var sendData=form.serialize();
        var fName = $('#author_FirstName').val();
        var lName = $('#author_LastName').val();
        var bio = tinyMCE.get('author_Bio').getContent(); //$('#author_Bio').Editor("getText");

        var author = {
            FirstName : fName,
            LastName : lName,
            Bio: bio
        };
        

        alert(author.Bio);

        if((author.FirstName==null || author.FirstName=="") || (author.LastName==null || author.LastName=="") || (author.Bio==null || author.Bio==""))
        {
            
            alert("all fields need to be fulfilled");
            return false;
        }

const product = {
                  Title: $('#Product_Title').val(),
                  Description: "",
                  ISBN: $("#Product_ISBN").val(),
                  ListPrice: 0,
                  Price: 0,
                  Price50: 0,
                  Price100: 0,
                  ImageUrl: null,
                  CategoryId: null,
                  CoverTypeId: null
              };
        $.ajax({
          type: "POST",
          url: "/Admin/Author/Upsert",
          headers: { 
            '@tokenSet.HeaderName' : '@tokenSet.RequestToken' 
          },
          data: author,
          success: function() { 
              document.getElementById('wrapper').style.visibility = "hidden"; 
              document.getElementById('Product_Description').style.zIndex = 1;
                
               var url = "/Admin/Product/Upsert";

                 //alert(product.Title);
           window.location.reload();
      //     window.location = '/Admin/Product/Upsert' + @Model.Product;
          //alert(product.Title);
          }
        });
       // alert(product.Title);
         $.get(url).done(function(product){
                //alert("done");
            })
        // var data = product;
        // $.get(url).done(function(data){
        //    //alert("done");
        //})

       //check if in this place we can inport the certain function to make suer
       //everzthing is posted in the right 


        //$.post(url, author).done(function(data){
        //    document.getElementById('wrapper').style.visibility = "hidden";
        //})

         //var x = $("form").serializeArray();
         //       $.each(x, function(i, field) {
         //           $("#output").append(field.name + ":"
         //                   + field.value + " ");
         //       });

    })
})


            document.getElementById('addAuthorBtn').addEventListener('click', (e) => {
            document.getElementById('wrapper').style.visibility = "visible";
            document.getElementById('Product_Description').style.zIndex = -1;
        });

        function closePopup(){
            document.getElementById('wrapper').style.visibility = "hidden"; 
        }
        

          //document.getElementById('close-btn').addEventListener('click', (e) => {
          //     $('#addNewAuthor').validate();
          //      $(this).attr("ajax-poziv", "dodan");
          //      event.preventDefault();
          //      if (!$("#addNewAuthor").valid()) {
          //          return false;
          //      }
          //      else 
          //      {
          //          document.getElementById('wrapper').style.visibility = "hidden";
          //          var divZaRezultat = $(this).attr("ajax-rezultat");
          //          /*if (kol >= 1 && x<=100) {//$("#ocjenaSpan").html("Ocjena je neophodna");
 
          //              if (!$("#dodajNovuNormativStavku").valid()) {
          //                  return false;
          //              }
          //              else {*/
          //          var urlZaPoziv1 = $(this).attr("ajax-url");
          //          var form = $(this);
          //          $.ajax({
          //              type: "POST",
          //              url: urlZaPoziv1,
          //              data: form.serialize()
          //          });
          //      }
          //})
            

     //$('#addNewAuthor').validate();
     //           $(this).attr("ajax-poziv", "dodan");
     //           event.preventDefault();
     //           if (!$("#addNewAuthor").valid()) {
     //               return false;
     //           }
     //           else {
     //               document.getElementById('wrapper').style.visibility = "hidden";
     //               var divZaRezultat = $(this).attr("ajax-rezultat");
     //               /*if (kol >= 1 && x<=100) {//$("#ocjenaSpan").html("Ocjena je neophodna");
    
     //                   if (!$("#dodajNovuNormativStavku").valid()) {
     //                       return false;
     //                   }
     //                   else {*/
     //               var urlZaPoziv1 = $(this).attr("ajax-url");
     //               var form = $(this);
     //               $.ajax({
     //                   type: "POST",
     //                   url: urlZaPoziv1,
     //                   data: form.serialize(),
     //               });
     //       window.location.reload();
     //   });

        //  $(function () {
        
        //    jQuery.validator.unobtrusive.parse();
        //    jQuery.validator.unobtrusive.parse("#addNewAuthor");
        //});

//$("#addNewAuthor").submit(function(event) {

//    //$('#addNewAuthor').validate();
//    $(this).attr("ajax-poziv", "dodan");
//    event.preventDefault();
//    if (!$("#addNewAuthor").valid()) {
//        alert("not valid")
//        return false;
//    }
//    else {
        
//        var divZaRezultat = $(this).attr("ajax-rezultat");
//        /*if (kol >= 1 && x<=100) {//$("#ocjenaSpan").html("Ocjena je neophodna");
 
//            if (!$("#dodajNovuNormativStavku").valid()) {
//                return false;
//            }
//            else {*/
//        var urlZaPoziv1 = $(this).attr("ajax-url");
//        var form = $(this);
//        $.ajax({
//            type: "POST",
//            url: urlZaPoziv1,
//            data: form.serialize(),
//            success:document.getElementById('wrapper').style.visibility = "hidden"
//        });
//        }
//   // }
//});

 //$(function () {
 //       //allow the validation framework to re-prase the DOM
 //       jQuery.validator.unobtrusive.parse();
 //       //or to give the parser some context, supply it with a selector
 //       //jQuery validator will parse all child elements (deep) starting
 //       //from the selector element supplied
 //           jQuery.validator.unobtrusive.parse("#addNewAuthor");
 //       });

function sendAjax() {
    
    let form = $("#addNewAuthor").serialize();
   // alert(form.value)
     var urlZaPoziv1 = $(this).attr("ajax-url");

    event.preventDefault();
    //if (!$("#addNewAuthor").valid()) {
    //    alert("not valid")
    //    return false;
    //}
    //else {
        //var row2Append = $('table tbody tr:last');
        //var nameAr = $('#nameAr').val();
        //var nameEn = $('#nameEn').val();

        $.ajax({
            url: "/Admin/Author/Upsert/",
                type: 'post',
            data: form,
            headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
          
            success: document.getElementById('wrapper').style.visibility = "hidden"

        });
    //}
}

        //$("#addAuthorBtn").click(function (event) {
        //    $(this).attr("ajax-poziv", "dodan");
        //    event.preventDefault();
        //    var urlZaPoziv1 = $(this).attr("ajax-url");
        //    alert(urlZaPoziv1);
        //    //var urlZaPoziv2 = $(this).attr("href");
        //    //var divZaRezultat = $(this).attr("ajax-rezultat");
        //    //var urlZaPoziv;
        //    //if (urlZaPoziv1 instanceof String)
        //    //    urlZaPoziv = urlZaPoziv1;
        //    //else
        //    //    urlZaPoziv = urlZaPoziv2;
        //    //alert(urlZaPoziv);
        //    $.get(urlZaPoziv1, function (data, status) {
        //        $("#" + divZaRezultat).html(data);
        //    });
        //});
     </script>
}